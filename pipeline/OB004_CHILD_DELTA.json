{
	"name": "OB004_CHILD_DELTA",
	"properties": {
		"activities": [
			{
				"name": "Retrieve Config for OB4001",
				"description": "Retrieving config info for OB4001 to extract data for Data Platform",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select \nac.*,\nSpec_Code_Id,\n    Min_Window_Start_Value\nfrom [stage].[ADF_Config] ac  join [stage].[ADF_Delta_Pipelines_Detail] dpd\non ac.id = dpd.Spec_Code_Id\nwhere ac.Spec_Code = '@{pipeline().parameters.speccode}' and ac.Operation ='delta'",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_ASQL",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				},
				"linkedServiceName": {
					"referenceName": "LS_ASQL",
					"type": "LinkedServiceReference"
				},
				"outputs": [
					{
						"name": "Configuration"
					}
				]
			},
			{
				"name": "ForEach Table",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Retrieve Config for OB4001",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "TimeStampt",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Retrieve Config for OB4001').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy data - Delta Load",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('Select * from ', item().Source_Name , ' where ',item().Where_Condition , '>' , item().Min_Window_Start_Value)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".csv"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_ASQL",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_ABLB_SFTP",
									"type": "DatasetReference",
									"parameters": {
										"File_Name": {
											"value": "@concat(item().Target_Name,'_',variables('TimeStamp'),item().Target_File_Extention)\n",
											"type": "Expression"
										},
										"Folder_Name": {
											"value": "@item().Directory",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Update Max Record Id",
							"description": "This task will update table for delta load.\nIt set max id from table and update to config table Min Window Start value for Delta Load Next time.",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Copy data - Delta Load",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "LS_ASQL",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "update  [stage].[ADF_Delta_Pipelines_Detail]\nset Min_Window_Start_Value = (\nselect CASE WHEN  (max (@{item().Where_Condition})>0) THEN max (@{item().Where_Condition}) ELSE 0 END from @{item().Source_Name}),\nLast_Processed_Timestamp = getdate()\nwhere Spec_Code_Id = @{item().Spec_Code_Id}",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			},
			{
				"name": "TimeStampt",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "TimeStamp",
					"value": {
						"value": "@substring(replace(replace(replace(pipeline().TriggerTime,'-',''),':',''),'T',''),0,15)",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"speccode": {
				"type": "String",
				"defaultValue": "OB004"
			}
		},
		"variables": {
			"TimeStamp": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-09-06T20:28:34Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}